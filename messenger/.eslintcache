[{"C:\\GithubProjects\\Messenger\\messenger\\src\\index.js":"1","C:\\GithubProjects\\Messenger\\messenger\\src\\components\\App.js":"2","C:\\GithubProjects\\Messenger\\messenger\\src\\components\\Login.js":"3","C:\\GithubProjects\\Messenger\\messenger\\src\\components\\Dashboard.js":"4","C:\\GithubProjects\\Messenger\\messenger\\src\\components\\Sidebar.js":"5","C:\\GithubProjects\\Messenger\\messenger\\src\\components\\NewContactModal.js":"6","C:\\GithubProjects\\Messenger\\messenger\\src\\CustomHook\\useSessionStorage.js":"7","C:\\GithubProjects\\Messenger\\messenger\\src\\components\\ContactProvider.js":"8","C:\\GithubProjects\\Messenger\\messenger\\src\\components\\ConversationProvider.js":"9","C:\\GithubProjects\\Messenger\\messenger\\src\\components\\NewConversationModal.js":"10"},{"size":259,"mtime":1610941893832,"results":"11","hashOfConfig":"12"},{"size":604,"mtime":1610941893970,"results":"13","hashOfConfig":"12"},{"size":1040,"mtime":1610853106947,"results":"14","hashOfConfig":"12"},{"size":199,"mtime":1610941077937,"results":"15","hashOfConfig":"12"},{"size":1901,"mtime":1610941893840,"results":"16","hashOfConfig":"12"},{"size":1166,"mtime":1610941893832,"results":"17","hashOfConfig":"12"},{"size":573,"mtime":1610941236867,"results":"18","hashOfConfig":"12"},{"size":628,"mtime":1610941894028,"results":"19","hashOfConfig":"12"},{"size":701,"mtime":1610941893970,"results":"20","hashOfConfig":"12"},{"size":1718,"mtime":1610941701293,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jde898",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\GithubProjects\\Messenger\\messenger\\src\\index.js",[],"C:\\GithubProjects\\Messenger\\messenger\\src\\components\\App.js",["48"],"import React from 'react'\nimport Login from './Login'\nimport ContactProvider from './ContactProvider.js'\nimport Dashboard from './Dashboard'\nimport useSessionStorage from '../CustomHook/useSessionStorage'\nimport ConversationProvider from './ConversationProvider'\n\nfunction App() {\n  const [id,setId]=useSessionStorage('ID',\"\");\n  const dashboard=(\n    <ContactProvider>\n      <ConversationProvider> <Dashboard id={id}/></ConversationProvider>\n      \n    \n    </ContactProvider>\n  )\n  return (\n<>\n\n\n     {id==\"\" ||  id==null? <Login onIdSubmit={setId}/> : dashboard}\n    \n</>\n  )\n}\n\nexport default App;\n",["49","50"],"C:\\GithubProjects\\Messenger\\messenger\\src\\components\\Login.js",[],"C:\\GithubProjects\\Messenger\\messenger\\src\\components\\Dashboard.js",[],"C:\\GithubProjects\\Messenger\\messenger\\src\\components\\Sidebar.js",["51"],"import {React,useState} from 'react'\r\nimport {Tab,Tabs,Button} from 'react-bootstrap'\r\nimport {useContact} from './ContactProvider'\r\nimport {useConversation} from './ConversationProvider'\r\nimport NewContactModal from './NewContactModal'\r\nimport NewConversationModal from './NewConversationModal'\r\nimport './SidebarStyles.css'\r\nfunction Sidebar({ID}) {\r\n\r\n    const [activeKey,setActiveKey]=useState(\"Conversations\")\r\n    const [showModal,setShowModal]=useState(false);\r\n    const contacts=useContact();\r\n    const conversations=useConversation();\r\n   \r\n  \r\n    function handleClick(){\r\n       setShowModal(true)\r\n    }\r\n    \r\n\r\n   \r\n    return (\r\n\r\n<div className=\"w-25\">\r\n\r\n<div className=\"border-right w-auto\">\r\n\r\n<Tabs defaultActiveKey={activeKey} onSelect={setActiveKey}>\r\n\r\n  <Tab eventKey=\"Conversations\" title=\"Conversations\" >\r\n  <div style={{height:'80vh', width:'auto'}}>\r\n  \r\n  {\r\n       conversations.conversationList.map(arr=>(\r\n           <div  className=\"list\">\r\n           <div >\r\n           {arr.map((val,index)=>(\r\n              (index!==arr.length-1) ? <span>{val}, </span> : <span>{val}</span>\r\n           ))}\r\n          \r\n           </div>\r\n           </div>\r\n           \r\n       ))\r\n    }\r\n    </div>\r\n    \r\n  </Tab>\r\n  <Tab eventKey=\"Contacts\" title=\"Contacts\">\r\n  <div style={{height:'80vh', width:'auto'}}>\r\n    {\r\n\r\n      contacts.contactList.map(value=>(\r\n        <div className=\"list\">{value}</div>\r\n      ))\r\n    }\r\n    </div>\r\n    \r\n  </Tab>\r\n</Tabs>\r\n\r\n<div className=\"border-right border-top\" >\r\n  Your ID: {ID}\r\n</div>\r\n<Button style={{padding:\"0px\", width:\"100%\"}} onClick={handleClick}>New {activeKey===\"Conversations\" ? \"Conversation\" : \"Contact\"}\r\n</Button>\r\n</div>\r\n{activeKey==\"Contacts\" ? <NewContactModal show={showModal} setShow={setShowModal}/> : <NewConversationModal  show={showModal} setShow={setShowModal}/>}\r\n\r\n</div>\r\n    )\r\n}\r\nexport default Sidebar;","C:\\GithubProjects\\Messenger\\messenger\\src\\components\\NewContactModal.js",["52","53"],"import {React,useRef,useContext} from 'react'\r\nimport {Modal,Form,Button} from 'react-bootstrap'\r\n\r\nimport {useContact} from './ContactProvider'\r\nfunction NewContactModal({show,setShow}) {\r\n    const newContactID=useRef();\r\n    const contacts=useContact();\r\n    function handleHide(){\r\n        setShow(false);\r\n    }\r\n    function HandleSubmit(){\r\n        if (newContactID.current.value!=\"\"){\r\n        contacts.addContact(newContactID.current.value)\r\n     setShow(false);}\r\n        }\r\n     \r\n    \r\n    \r\n    return (\r\n        <div>\r\n            \r\n           <Modal show={show} onHide={handleHide}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Create Contact</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <span>ID</span>\r\n                    <Form.Control type=\"text\" ref={newContactID}></Form.Control>\r\n                \r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button type=\"Submit\" onClick={HandleSubmit}>Add New Contact</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewContactModal;\r\n","C:\\GithubProjects\\Messenger\\messenger\\src\\CustomHook\\useSessionStorage.js",["54"],"import { useEffect, useState } from 'react'\r\n\r\nconst PREFIX = 'messenger-'\r\n\r\nexport default function useSessionStorage(key, initialValue) {\r\n  const prefixedKey = PREFIX + key\r\n  const [value, setValue] = useState(() => {\r\n    try{\r\n    if(sessionStorage.getItem(prefixedKey)){\r\n      return JSON.parse(sessionStorage.getItem(prefixedKey));\r\n    }\r\n    else{\r\n      return initialValue;\r\n    }}\r\n    catch(err){\r\n      return initialValue;\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n\r\n    sessionStorage.setItem(prefixedKey,value)\r\n  }, [value])\r\n\r\n  return [value, setValue]\r\n}","C:\\GithubProjects\\Messenger\\messenger\\src\\components\\ContactProvider.js",["55"],"import React from 'react'\r\nimport {useState,useContext} from 'react'\r\nimport useSessionStorage from '../CustomHook/useSessionStorage'\r\n export const ContactContext=React.createContext();\r\n\r\n export function useContact(){\r\n     return useContext(ContactContext);\r\n }\r\nexport default function ContactProvider({children}){\r\n    const [contactList,setContactList]=useSessionStorage('contactList',[]);\r\n    function addContact(value){\r\n        setContactList(prev=>[...prev,value]);\r\n    }\r\n    return(\r\n        <ContactContext.Provider value={{contactList,addContact}}>\r\n            {children}\r\n        </ContactContext.Provider>\r\n    )\r\n}\r\n","C:\\GithubProjects\\Messenger\\messenger\\src\\components\\ConversationProvider.js",[],"C:\\GithubProjects\\Messenger\\messenger\\src\\components\\NewConversationModal.js",[],{"ruleId":"56","severity":1,"message":"57","line":21,"column":9,"nodeType":"58","messageId":"59","endLine":21,"endColumn":11},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"56","severity":1,"message":"57","line":68,"column":11,"nodeType":"58","messageId":"59","endLine":68,"endColumn":13},{"ruleId":"64","severity":1,"message":"65","line":1,"column":22,"nodeType":"66","messageId":"67","endLine":1,"endColumn":32},{"ruleId":"56","severity":1,"message":"68","line":12,"column":39,"nodeType":"58","messageId":"59","endLine":12,"endColumn":41},{"ruleId":"69","severity":1,"message":"70","line":23,"column":6,"nodeType":"71","endLine":23,"endColumn":13,"suggestions":"72"},{"ruleId":"64","severity":1,"message":"73","line":2,"column":9,"nodeType":"66","messageId":"67","endLine":2,"endColumn":17},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'prefixedKey'. Either include it or remove the dependency array.","ArrayExpression",["76"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [prefixedKey, value]",{"range":"79","text":"80"},[532,539],"[prefixedKey, value]"]